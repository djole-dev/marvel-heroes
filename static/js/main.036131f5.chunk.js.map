{"version":3,"sources":["AppContext.js","marvel.png","components/Pagination.js","components/Card.js","components/CardList.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","AppProvider","children","useState","input","setInput","heroes","setHeroes","currentPage","setCurrentPage","totalNumberOfHeroes","setTotalNumberOfHeroes","JSON","parse","localStorage","getItem","bookmark","setBookmark","fetchData","a","page","offset","axios","process","response","data","code","results","total","Provider","value","Pagination","appCont","useContext","pageNumbers","i","Math","ceil","push","changePage","number","className","map","onClick","Card","id","title","img","unbookmarkAHero","newArray","filter","e","setItem","stringify","flag","renderBookmarkedHeroes","src","alt","CardList","hero","renderHeroes","name","thumbnail","path","Search","Logo","placeholder","type","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.036131f5.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const [heroes, setHeroes] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalNumberOfHeroes, setTotalNumberOfHeroes] = useState(0);\r\n\r\n  const [bookmark, setBookmark] = useState(\r\n    JSON.parse(localStorage.getItem(\"bookmarked\")) || []\r\n  );\r\n\r\n  //-------------------------------------------Fetching data from API-------------------------------------------------------------------\r\n  const fetchData = async (input,page = 1) => {\r\n    let offset = 20 * (page - 1);\r\n    setInput(input);\r\n    if (input !== \"\") {\r\n      const response = await axios(\r\n        `https://gateway.marvel.com:443/v1/public/characters?nameStartsWith=${input}&limit=20&offset=${offset}&ts=1&apikey=${process.env.REACT_APP_MARVEL_KEY}&hash=${process.env.REACT_APP_MARVEL_HASH}`\r\n      );\r\n      if (response.data.code === 200) {\r\n        setHeroes(response.data.data.results);\r\n        setTotalNumberOfHeroes(response.data.data.total);\r\n        setCurrentPage(page);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        totalNumberOfHeroes,\r\n        bookmark,\r\n        setBookmark,\r\n        input,\r\n        setInput,\r\n        heroes,\r\n        setHeroes,\r\n        currentPage,\r\n        setCurrentPage,\r\n        fetchData,\r\n      }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/marvel.4a9b7724.png\";","import React, { useContext } from \"react\";\r\nimport \"./Pagination.css\";\r\nimport { AppContext } from \"../AppContext\";\r\n\r\nfunction Pagination() {\r\n  const appCont = useContext(AppContext);\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(appCont.totalNumberOfHeroes / 20); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const changePage = (number) => {\r\n    appCont.setCurrentPage(number);\r\n    appCont.fetchData(appCont.input, number);\r\n  };\r\n\r\n  return (\r\n    <div className='pagination'>\r\n      <ul>\r\n        {pageNumbers.map((number) =>\r\n          appCont.currentPage === number ? (\r\n            <li\r\n              key={number}\r\n              className='numb active'\r\n              onClick={() => changePage(number)}>\r\n              <span>{number}</span>\r\n            </li>\r\n          ) : (\r\n            <li\r\n              key={number}\r\n              className='numb'\r\n              onClick={() => changePage(number)}>\r\n              <span>{number}</span>\r\n            </li>\r\n          )\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../AppContext\";\r\nimport \"./Card.css\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\n\r\nfunction Card({ id, title, img }) {\r\n  const appCont = useContext(AppContext);\r\n\r\n  //------------------------------------Bookmark a hero function----------------------------------------------------------\r\n  const bookmarkAHero = () => {\r\n    appCont.setBookmark([...appCont.bookmark, { id, title, img }]);\r\n    localStorage.setItem(\r\n      \"bookmarked\",\r\n      JSON.stringify([...appCont.bookmark, { id, title, img }])\r\n    );\r\n  };\r\n\r\n  //-------------------------------------------------------Delete a hero from bookmarks---------------------------------------------------\r\n  const unbookmarkAHero = () => {\r\n    let newArray = appCont.bookmark.filter((e) => e.id !== id);\r\n    appCont.setBookmark(newArray);\r\n    localStorage.setItem(\"bookmarked\", JSON.stringify(newArray));\r\n  };\r\n\r\n  //----------------------------------Checking if heroes are bookmarked or not, (Rendering bookmark or unbookmark)------------------------\r\n  let flag = true;\r\n  const renderBookmarkedHeroes = appCont.bookmark.map((e) => {\r\n    if (e.id === id) {\r\n      flag = false;\r\n      return (\r\n        <button key={id} onClick={unbookmarkAHero}>\r\n          <BookmarkIcon />\r\n          Unbookmark\r\n        </button>\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className='card'>\r\n      <img src={img} alt='' className='card__image' />\r\n      <div className='card__name'>{title}</div>\r\n      {flag === true ? (\r\n        <button onClick={bookmarkAHero}>\r\n          <BookmarkBorderIcon />\r\n          Bookmark\r\n        </button>\r\n      ) : (\r\n        renderBookmarkedHeroes\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useContext } from \"react\";\r\nimport \"./CardList.css\";\r\nimport Card from \"./Card\";\r\nimport { AppContext } from \"../AppContext\";\r\n\r\nfunction CardList() {\r\n  const appCont = useContext(AppContext);\r\n\r\n  const renderBookmarkedHeroes = appCont.bookmark.map((hero) => {\r\n    return (\r\n      <Card key={hero.id} id={hero.id} title={hero.title} img={hero.img} />\r\n    );\r\n  });\r\n\r\n  const renderHeroes = appCont.heroes.map((hero) => {\r\n    return (\r\n      <Card\r\n        key={hero.id}\r\n        id={hero.id}\r\n        title={hero.name}\r\n        img={hero.thumbnail.path + \"/portrait_xlarge.jpg\"}\r\n      />\r\n    );\r\n  });\r\n\r\n  return appCont.input === \"\" ? renderBookmarkedHeroes : renderHeroes;\r\n}\r\n\r\nexport default CardList;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../AppContext\";\r\nimport \"./Search.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Logo from \"../marvel.png\";\r\nimport Pagination from \"./Pagination\";\r\nimport CardList from \"./CardList\";\r\n\r\nfunction Search() {\r\n  const appCont = useContext(AppContext);\r\n\r\n  return (\r\n    <div className='search'>\r\n      <div className='search__container'>\r\n        <img src={Logo} alt='' className='search__logo' />\r\n        <SearchIcon className='search__icon' />\r\n        <input\r\n          placeholder='Enter the name of your Marvel superhero...'\r\n          className='search__input'\r\n          type='text'\r\n          onChange={(e) => {\r\n            appCont.fetchData(e.target.value, 1);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className='search__result'>\r\n        <CardList />\r\n      </div>\r\n      <div className='search__pagination'>\r\n        {appCont.input === \"\" ? null : <Pagination />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Search from \"./components/Search\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AppProvider } from \"./AppContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}